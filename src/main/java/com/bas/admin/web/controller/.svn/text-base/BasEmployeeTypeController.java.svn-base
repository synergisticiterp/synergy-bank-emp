package com.bas.admin.web.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.bas.admin.service.EmployeeTypeService;
import com.bas.admin.web.controller.form.EmployeeTypeForm;
import com.bas.admin.web.controller.form.LeaveReasonForm;
import com.bas.common.constant.NavigationConstant;

/**
 * 
 * @author Amogh
 * 
 */
@Controller
public class BasEmployeeTypeController {
	@Autowired
	@Qualifier("EmployeeTypeServiceImpl")
	private EmployeeTypeService employeeTypeService;

	@RequestMapping(value = "/addEmployeeType.htm", method = RequestMethod.GET)
	public String showAddEmploymentType(Model model) {
		EmployeeTypeForm employeeTypeForm = new EmployeeTypeForm();
		model.addAttribute("employeeTypeForm", employeeTypeForm);
		model.addAttribute("buttonLable", "Add EmployeeType");
		List<EmployeeTypeForm> employeeTypeForms = employeeTypeService
				.findEmployeeTypes();
		model.addAttribute("employeeTypeForms", employeeTypeForms);
		return NavigationConstant.ADMIN_PREFIX_PAGE
				+ NavigationConstant.ADD_EMPLOYEE_TYPE;
	}

	@RequestMapping(value = "/addEmployeeType.htm", method = RequestMethod.POST)
	public String submitAddEmployee(
			@ModelAttribute("employeeTypeForm") EmployeeTypeForm employeeTypeForm,
			@RequestParam(value = "buttonAction", required = false) String buttonAction,
			Model model) {
		if (buttonAction != null && buttonAction.equals("Update LeaveReason")) {

			employeeTypeService.updateEmployeeType(employeeTypeForm);
			System.out.println("Contr : " + employeeTypeForm);
		} else {
			employeeTypeService.addEmployeeType(employeeTypeForm);
		}
		List<EmployeeTypeForm> employeeTypeForms = employeeTypeService.findEmployeeTypes();
		model.addAttribute("buttonLable", "Add EmployeeType");
		EmployeeTypeForm nemployeeTypeForm = new EmployeeTypeForm();
		model.addAttribute("employeeTypeForm", nemployeeTypeForm);
		model.addAttribute("employeeTypeForms", employeeTypeForms);
		System.out.println(employeeTypeForms);
		return NavigationConstant.ADMIN_PREFIX_PAGE
				+ NavigationConstant.ADD_EMPLOYEE_TYPE;
	}
	@RequestMapping(value = "/editEmployeeType.htm", method = RequestMethod.GET)
	public String editEmployeeType(HttpServletRequest request, Model model) {
		Integer empId = Integer.parseInt(request.getParameter("employeeTypeId"));
		EmployeeTypeForm employeeTypeForm = employeeTypeService
				.findEmployeeTypeById(empId);
		model.addAttribute("employeeTypeForm", employeeTypeForm);
		List<EmployeeTypeForm> employeeTypeForms = employeeTypeService
				.findEmployeeTypes();
		model.addAttribute("buttonLable", "Update Employee Type");
		model.addAttribute("employeeTypeForms", employeeTypeForms);
		return NavigationConstant.ADMIN_PREFIX_PAGE
				+ NavigationConstant.ADD_EMPLOYEE_TYPE;
	}

	@RequestMapping(value = "/deleteEmployeeType.htm", method = RequestMethod.GET)
	public String deleteEmployeeType(HttpServletRequest request, Model model) {
		Integer empId = Integer.parseInt(request.getParameter("employeeTypeId"));
		System.out.println("empId" + empId);
		employeeTypeService.deleteEmployeeType(empId);
		return "redirect:addEmployeeType.htm";
	}
}